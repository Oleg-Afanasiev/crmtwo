package com.becomejavasenior;

import java.sql.*;

/**
 * Database Connection and PreparedStatement utility class
 *
 * @author  Andrey Radionov <andyomsk@gmail.com>
 * @version 0.2
 */

public class JdbcDBConnUtils {

    private Connection connection;

    private String user;
    private String password;
    private String driver;
    private String url;

    public JdbcDBConnUtils() {
        DaoProperties daoProperties = new DaoProperties();
        this.user = daoProperties.getProperty("user");
        this.password = daoProperties.getProperty("password");
        this.driver = daoProperties.getProperty("driver");
        this.url = daoProperties.getProperty("url");

        try {
            Class.forName(driver);
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
    }

    public Connection getConnection() throws SQLException {
        if (this.connection == null || this.connection.isClosed()) {
            this.connection = DriverManager.getConnection(url, user, password);
        }
        return this.connection;
    }

    public PreparedStatement getPreparedStatement(Connection connection, String sqlQuery) throws SQLException{
        return connection.prepareStatement(sqlQuery);
    }

    public PreparedStatement getPreparedStatement(Connection connection, String sqlQuery, int autoGeneratedKeys) throws SQLException{
        return connection.prepareStatement(sqlQuery, autoGeneratedKeys);
    }

    public void closeQuietly(ResultSet resultSet) {
        if (resultSet != null) {
            try {
                resultSet.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public void closeQuietly(PreparedStatement preparedStatement) {
       if (preparedStatement != null) {
           try {
               preparedStatement.close();
           } catch (SQLException e) {
               e.printStackTrace();
           }
       }
    }

    public void closeQuietly(Connection connection) {
        if (connection != null) {
            try {
                connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public void finalizeConn() {
        closeQuietly(this.connection);
    }

}
